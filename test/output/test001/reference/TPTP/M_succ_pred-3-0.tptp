% PO 3 0
% Group AssertionLemmas
% Tag Assertion is verified
%--------------------------------------------------------------------------
% File     : .
% Domain   : Atelier-B Proof Obligations - translated to TPTP
% Problem  : PUZ005+1
% Version  : TPTP v5.3.0. Released v2.2.0.
% English  : 
% Comments : Autogenerated by PPTRANS-TPTP
% Source   : 
%--------------------------------------------------------------------------

tff(set_0_type,type,(set_0: $tType )).
tff(mem0_type,type,(mem0: ( $int * set_0 ) > $o )).
tff(set_1_type,type,(set_1: $tType )).
tff(mem1_type,type,(mem1: ( $real * set_1 ) > $o )).
tff(b_division_type,type,(divB: ( $int * $int ) > $int )).
tff(b_division_def_1,axiom,(! [X: $int,Y: $int] : (( $lesseq(0,X)& $less(0,Y))=> divB(X,Y) = $quotient_f(X,Y)))).
tff(b_division_def_2,axiom,(! [X: $int,Y: $int] : (( $lesseq(X,0)& $less(0,Y))=> divB(X,Y) = $uminus($quotient_f($uminus(X),Y)) ) )).
tff(b_division_def_3,axiom,(! [X: $int,Y: $int] : (( $lesseq(0,X)& $less(Y,0))=> divB(X,Y) = $quotient_f(X,Y)))).
tff(b_division_def_4,axiom,(! [X: $int,Y: $int] : (( $lesseq(X,0)& $less(Y,0))=> divB(X,Y) = $quotient_f($uminus(X),$uminus(Y)) ) )).
tff(exp_type,type,(exp: ( $int * $int ) > $int )).
tff(exp_def_1,axiom,(! [X: $int] : ( exp(X,0) = 1 ) )).
tff(exp_def_2,axiom,(! [X: $int,Y: $int] : (( $greatereq(Y,1))=> exp(X,Y) = $sum(X,exp(X,$difference(Y,1))) ) )).
tff(rexp_type,type,(rexp: ( $real * $int ) > $real )).
tff(rexp_def_1,axiom,(! [X: $real] : (( X != 0.0)=> rexp(X,0) = 1.0 ) )).
tff(rexp_def_2,axiom,(! [X: $real,Y: $int] : (( $greatereq(Y,1))=> rexp(X,Y) = $sum(X,rexp(X,$difference(Y,1))) ) )).
tff(isum_type,type,(isum: set_0 > $int )).
tff(isum_def_1,axiom,( ! [S: set_0] : (! [X: $int] : (~ mem0(X,S) ) => isum(S) = 0 ))).
tff(isum_def_2,axiom,( ! [S1: set_0,S2: set_0,E: $int,N: $int] : ( ( isum(S1) = N & ~ mem0(E,S1) & ! [X: $int] : ( mem0(X,S2) => ( X = E | mem0(X,S1) ) ) & ! [X: $int] :  ( mem0(X,S1) => mem0(X,S2) ) ) => isum(S2) = $sum(N,E) ) )).
tff(rsum_type,type,(rsum: set_1 > $real )).
tff(rsum_def_1,axiom,(! [S: set_1,X: $real] : ( ( ~ mem1(X,S))=> rsum(S) = 0.0 ) )).
tff(rsum_def_2,axiom,(! [S1: set_1, S2: set_1,E: $real,N: $real] : ( ( rsum(S1) = N & ~ mem1(E,S1) & ! [X: $real] : ( mem1(X,S2) => ( X = E | mem1(X,S1) ) ) & ! [X: $real] :  ( mem1(X,S1) => mem1(X,S2) ) ) => rsum(S2) = $sum(N,E) ) )).
tff(iprod_type,type,(iprod: set_0 > $int )).
tff(iprod_def_1,axiom,(! [S: set_0,X: $int] : ( ( ~ mem0(X,S))=> iprod(S) = 1 ) )).
tff(iprod_def_2,axiom,( ! [S1: set_0,S2: set_0,E: $int,N: $int] : ( ( iprod(S1) = N & ~ mem0(E,S1) & ! [X: $int] : ( mem0(X,S2) => ( X = E | mem0(X,S1) ) ) & ! [X: $int] : ( ( X = E | mem0(X,S1) ) => mem0(X,S2) ) ) => isum(S2) = $product(N,E) ) )).
tff(rprod_type,type,(rprod: set_1 > $real )).
tff(rprod_def_1,axiom,(! [S: set_1,X: $real] : ( ( ~ mem1(X,S))=> rprod(S) = 1.0 ) )).
tff(rprod_def_2,axiom,(! [S1: set_1,S2: set_1,E: $real,N: $real] : ( ( rprod(S1) = N & ~ mem1(E,S1) & ! [X: $real] : ( mem1(X,S2) => ( X = E | mem1(X,S1) ) ) & ! [X: $real] : ( ( X = E | mem1(X,S1) ) => mem1(X,S2) ) ) => rprod(S2) = $sum(N,E) ) )).
tff(min_int_type,type,(min_int: $int )).
tff(max_int_type,type,(max_int: $int )).
        
tff(min_int_axiom,axiom,(min_int = $uminus(2147483648 ))).
tff(max_int_axiom,axiom,(max_int =2147483647)).
%--------------------------------------------------------------------------
% Global declarations
tff(g_c1_1_type, type, g_c1_1 : $int).
tff(g_s1_0_type, type, g_s1_0 : set_0).
% Defines
tff('Define:B definitions:0', axiom, (! [X_3 : $int] : (((($greatereq(X_3, 0) & $lesseq(X_3, max_int))) <=> (($greatereq(X_3, 0) & $lesseq(X_3, max_int))))))).

tff('Define:B definitions:1', axiom, (! [X_4 : $int] : (((($greatereq(X_4, min_int) & $lesseq(X_4, max_int))) <=> (($greatereq(X_4, min_int) & $lesseq(X_4, max_int))))))).

tff('Define:lprp:0', axiom, $true).

tff('Define:lprp:1', axiom, (! [X_5 : $int] : (((mem0(X_5, g_s1_0)) => ($true))))).

%Global hypotheses
tff('gh_0_def', hypothesis, 1 = $sum(1, 1)).

tff('gh_1_def', hypothesis, g_c1_1 = $sum(g_c1_1, 1)).

tff('gh_2_def', hypothesis, (! [X_8 : $int] : ((((? [X_9 : $int] : (((X_9 = g_c1_1) & X_8 = $sum(X_9, 1))))) <=> (mem0(X_8, g_s1_0)))))).

% Local hypotheses
% Goal
tff('Goal', conjecture, (! [X_10 : $int] : ((((? [X_11 : $int] : ((mem0(X_11, g_s1_0) & X_10 = $sum(X_11, 1))))) <=> (mem0(X_10, g_s1_0)))))).
