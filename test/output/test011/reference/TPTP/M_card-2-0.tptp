% PO 2 0
% Group AssertionLemmas
% Tag Assertion is verified
%--------------------------------------------------------------------------
% File     : .
% Domain   : Atelier-B Proof Obligations - translated to TPTP
% Version  : TPTP v5.3.0. Released v2.2.0.
% English  : 
% Comments : Generated by PPTRANS-TPTP
% Source   : 
%--------------------------------------------------------------------------

tff(set_0_type,type,(set_0: $tType )).
tff(mem0_type,type,(mem0: ( $int * set_0 ) > $o )).

tff(min_int_type,type,(min_int: $int)).
tff(max_int_type,type,(max_int: $int)).
tff(min_int_axiom,axiom,(min_int = $uminus(2147483648))).
tff(max_int_axiom,axiom,(max_int = 2147483647)).
%--------------------------------------------------------------------------
% Global declarations
tff(g_S1_0_type, type, g_S1_0 : set_0).
tff(g_S2_1_type, type, g_S2_1 : set_0).
tff(g_S3_2_type, type, g_S3_2 : set_0).
tff(set_2_type, type, set_2 : $tType).
tff(set_2_empty, type, set_2_empty : set_2).
tff(set_2_insert, type, set_2_insert : set_2 > set_2).
tff(mem2_type, type, mem2 : ($int * $int * set_2) > $o).
% Defines
tff('Define:lprp:0', axiom, (! [X_5 : $int] : (((mem0(X_5, g_S1_0)) => ($true))))).

tff('Define:lprp:1', axiom, (! [X_6 : $int] : (((mem0(X_6, g_S2_1)) => ($true))))).

tff('Define:lprp:2', axiom, (! [X_7 : $int] : (((mem0(X_7, g_S3_2)) => ($true))))).

tff('Define:lprp:3', axiom, (! [X_8 : $int] : (((mem0(X_8, g_S1_0)) <=> ($false))))).

tff('Define:lprp:4', axiom, (! [X_9 : $int] : (((mem0(X_9, g_S2_1)) <=> ((X_9 = 1)))))).

tff('Define:lprp:5', axiom, (! [X_10 : $int] : (((mem0(X_10, g_S3_2)) <=> (((X_10 = 1) | (X_10 = 2) | (X_10 = 3))))))).

%Global hypotheses
tff('gh_0_def', hypothesis, (? [X_59 : set_2] : ((((? [X_60 : set_2] : ((! [X_61 : $int, X_62 : $int] : (((mem2(X_62, X_61, X_60)) <=> (mem2(X_62, X_61, X_59))))) & (! [X_63 : $int, X_64 : $int, X_65 : $int] : ((((mem2(X_63, X_64, X_60) & mem2(X_63, X_65, X_60))) => ((X_64 = X_65))))) & (! [X_66 : $int] : (((mem0(X_66, g_S1_0)) <=> ((? [X_67 : $int] : (mem2(X_66, X_67, X_60))))))) & (! [X_68 : $int] : ((((? [X_69 : $int] : (mem2(X_69, X_68, X_60)))) => (($greatereq(X_68, 1) & $lesseq(X_68, 0)))))))) & (! [X_70 : $int] : (((($greatereq(X_70, 1) & $lesseq(X_70, 0))) => ((? [X_71 : $int] : (mem2(X_71, X_70, X_59)))))))) & (! [X_72 : $int, X_73 : $int, X_74 : $int] : ((((mem2(X_73, X_72, X_59) & mem2(X_74, X_72, X_59))) => ((X_73 = X_74))))))))).

tff('gh_1_def', hypothesis, (? [X_75 : set_2] : ((((? [X_76 : set_2] : ((! [X_77 : $int, X_78 : $int] : (((mem2(X_78, X_77, X_76)) <=> (mem2(X_78, X_77, X_75))))) & (! [X_79 : $int, X_80 : $int, X_81 : $int] : ((((mem2(X_79, X_80, X_76) & mem2(X_79, X_81, X_76))) => ((X_80 = X_81))))) & (! [X_82 : $int] : (((mem0(X_82, g_S2_1)) <=> ((? [X_83 : $int] : (mem2(X_82, X_83, X_76))))))) & (! [X_84 : $int] : ((((? [X_85 : $int] : (mem2(X_85, X_84, X_76)))) => (($greatereq(X_84, 1) & $lesseq(X_84, 1)))))))) & (! [X_86 : $int] : (((($greatereq(X_86, 1) & $lesseq(X_86, 1))) => ((? [X_87 : $int] : (mem2(X_87, X_86, X_75)))))))) & (! [X_88 : $int, X_89 : $int, X_90 : $int] : ((((mem2(X_89, X_88, X_75) & mem2(X_90, X_88, X_75))) => ((X_89 = X_90))))))))).

% Local hypotheses
% Goal
tff('Goal', conjecture, (? [X_91 : set_2] : ((((? [X_92 : set_2] : ((! [X_93 : $int, X_94 : $int] : (((mem2(X_94, X_93, X_92)) <=> (mem2(X_94, X_93, X_91))))) & (! [X_95 : $int, X_96 : $int, X_97 : $int] : ((((mem2(X_95, X_96, X_92) & mem2(X_95, X_97, X_92))) => ((X_96 = X_97))))) & (! [X_98 : $int] : (((mem0(X_98, g_S3_2)) <=> ((? [X_99 : $int] : (mem2(X_98, X_99, X_92))))))) & (! [X_100 : $int] : ((((? [X_101 : $int] : (mem2(X_101, X_100, X_92)))) => (($greatereq(X_100, 1) & $lesseq(X_100, 3)))))))) & (! [X_102 : $int] : (((($greatereq(X_102, 1) & $lesseq(X_102, 3))) => ((? [X_103 : $int] : (mem2(X_103, X_102, X_91)))))))) & (! [X_104 : $int, X_105 : $int, X_106 : $int] : ((((mem2(X_105, X_104, X_91) & mem2(X_106, X_104, X_91))) => ((X_105 = X_106))))))))).
