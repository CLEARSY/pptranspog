% PO 4 0
% Group AssertionLemmas
% Tag Assertion is verified
%--------------------------------------------------------------------------
% File     : .
% Domain   : Atelier-B Proof Obligations - translated to TPTP
% Version  : TPTP v5.3.0. Released v2.2.0.
% English  : 
% Comments : Generated by PPTRANS-TPTP
% Source   : 
%--------------------------------------------------------------------------

tff(set_0_type,type,(set_0: $tType )).
tff(mem0_type,type,(mem0: ( $int * set_0 ) > $o )).

tff(min_int_type,type,(min_int: $int)).
tff(max_int_type,type,(max_int: $int)).
tff(min_int_axiom,axiom,(min_int = $uminus(2147483648))).
tff(max_int_axiom,axiom,(max_int = 2147483647)).
%--------------------------------------------------------------------------
% Global declarations
tff(g_S1_0_type, type, g_S1_0 : set_0).
tff(g_S2_1_type, type, g_S2_1 : set_0).
% Defines
tff('Define:lprp:0', axiom, (! [X_5 : $int] : (((mem0(X_5, g_S1_0)) => ($true))))).

tff('Define:lprp:1', axiom, (! [X_6 : $int] : (((mem0(X_6, g_S2_1)) => ($true))))).

tff('Define:lprp:2', axiom, (! [X_7 : $int] : (((mem0(X_7, g_S1_0)) <=> ((X_7 = 1)))))).

tff('Define:lprp:3', axiom, (! [X_8 : $int] : (((mem0(X_8, g_S2_1)) <=> (((X_8 = 1) | (X_8 = 2) | (X_8 = 3))))))).

%Global hypotheses
tff('gh_0_def', hypothesis, (! [X_30 : $int] : ((X_30 = 3) => (mem0(X_30, g_S2_1))) & (! [X_29 : $int] : (((mem0(X_29, g_S2_1)) => ($lesseq(3, X_29))))))).

tff('gh_1_def', hypothesis, (! [X_32 : $int] : ((X_32 = 1) => (mem0(X_32, g_S2_1))) & (! [X_31 : $int] : (((mem0(X_31, g_S2_1)) => ($greatereq(1, X_31))))))).

tff('gh_2_def', hypothesis, (! [X_34 : $int] : ((X_34 = 1) => (mem0(X_34, g_S2_1))) & (! [X_33 : $int] : (((mem0(X_33, g_S2_1)) => ($lesseq(1, X_33))))))).

tff('gh_3_def', hypothesis, (! [X_36 : $int] : ((X_36 = 3) => (mem0(X_36, g_S2_1))) & (! [X_35 : $int] : (((mem0(X_35, g_S2_1)) => ($greatereq(3, X_35))))))).

% Local hypotheses
% Goal
tff('Goal', conjecture, (! [X_38 : $int] : ((mem0(X_38, g_S1_0) & (! [X_39 : $int] : (((mem0(X_39, g_S1_0)) => ($lesseq(X_38, X_39)))))) => (mem0(X_38, g_S1_0))) & (! [X_37 : $int] : (((mem0(X_37, g_S1_0)) => (! [X_40 : $int] : ((mem0(X_40, g_S1_0) & (! [X_41 : $int] : (((mem0(X_41, g_S1_0)) => ($lesseq(X_40, X_41)))))) => ($greatereq(X_40, X_37))))))))).
