% PO 2 0
% Group AssertionLemmas
% Tag Assertion is verified
%--------------------------------------------------------------------------
% File     : .
% Domain   : Atelier-B Proof Obligations - translated to TPTP
% Version  : TPTP v5.3.0. Released v2.2.0.
% English  : 
% Comments : Generated by PPTRANS-TPTP
% Source   : 
%--------------------------------------------------------------------------

tff(set_0_type,type,(set_0: $tType )).
tff(mem0_type,type,(mem0: ( $int * set_0 ) > $o )).

tff(set_1_type,type,(set_1: $tType )).
tff(mem1_type,type,(mem1: ( $real * set_1 ) > $o )).

tff(min_int_type,type,(min_int: $int)).
tff(max_int_type,type,(max_int: $int)).
tff(min_int_axiom,axiom,(min_int = $uminus(2147483648))).
tff(max_int_axiom,axiom,(max_int = 2147483647)).
%--------------------------------------------------------------------------
% Global declarations
tff(g_S1_0_type, type, g_S1_0 : set_0).
tff(g_S2_1_type, type, g_S2_1 : set_0).
tff(set_2_type, type, set_2 : $tType).
tff(set_2_empty, type, set_2_empty : set_2).
tff(set_2_insert, type, set_2_insert : set_2 > set_2).
tff(mem2_type, type, mem2 : ($int * $int * set_2) > $o).
tff(set_3_type, type, set_3 : $tType).
tff(set_3_empty, type, set_3_empty : set_3).
tff(set_3_insert, type, set_3_insert : set_3 > set_3).
tff(mem3_type, type, mem3 : ($int * $real * set_3) > $o).
% Defines
tff('Define:lprp:0', axiom, (! [X_5 : $int] : (((mem0(X_5, g_S1_0)) => ($true))))).

tff('Define:lprp:1', axiom, (! [X_6 : $int] : (((mem0(X_6, g_S1_0)) <=> (((X_6 = 5) | (X_6 = 4) | (X_6 = 1) | (X_6 = 1) | (X_6 = 2) | (X_6 = 3) | (X_6 = 8))))))).

tff('Define:lprp:2', axiom, (! [X_7 : $int] : (((mem0(X_7, g_S2_1)) => ($true))))).

tff('Define:lprp:3', axiom, (! [X_8 : $int] : (((mem0(X_8, g_S2_1)) <=> (($true & ($remainder_f(X_8, 2) = 0))))))).

%Global hypotheses
tff('gh_0_def', hypothesis, (? [X_57 : $int] : ((((? [X_58 : set_2] : ((! [X_59 : $int, X_60 : $int] : (((mem2(X_60, X_59, X_58)) <=> ((((X_60 = 1) & (X_59 = 5)) | ((X_60 = 2) & (X_59 = 2)) | ((X_60 = 3) & (X_59 = 0))))))) & (! [X_61 : $int, X_62 : $int, X_63 : $int] : ((((mem2(X_61, X_62, X_58) & mem2(X_61, X_63, X_58))) => ((X_62 = X_63))))) & (! [X_64 : $int] : (((($greatereq(X_64, 1) & $lesseq(X_64, X_57))) <=> ((? [X_65 : $int] : (mem2(X_64, X_65, X_58))))))) & (! [X_66 : $int] : ((((? [X_67 : $int] : (mem2(X_67, X_66, X_58)))) => (mem0(X_66, g_S1_0))))))) & (! [X_68 : $int] : (((mem0(X_68, g_S1_0)) => ((? [X_69 : $int] : ((((X_69 = 1) & (X_68 = 5)) | ((X_69 = 2) & (X_68 = 2)) | ((X_69 = 3) & (X_68 = 0)))))))))) & (! [X_70 : $int, X_71 : $int, X_72 : $int] : (((((((X_71 = 1) & (X_70 = 5)) | ((X_71 = 2) & (X_70 = 2)) | ((X_71 = 3) & (X_70 = 0))) & (((X_72 = 1) & (X_70 = 5)) | ((X_72 = 2) & (X_70 = 2)) | ((X_72 = 3) & (X_70 = 0))))) => ((X_71 = X_72))))))))).

tff('gh_1_def', hypothesis, (? [X_73 : $int] : ((((? [X_74 : set_3] : ((! [X_75 : $real, X_76 : $int] : (((mem3(X_76, X_75, X_74)) <=> ((((X_76 = 1) & (X_75 = 1.2)) | ((X_76 = 2) & (X_75 = $uminus(5.3)))))))) & (! [X_77 : $int, X_78 : $real, X_79 : $real] : ((((mem3(X_77, X_78, X_74) & mem3(X_77, X_79, X_74))) => ((X_78 = X_79))))) & (! [X_80 : $int] : (((($greatereq(X_80, 1) & $lesseq(X_80, X_73))) <=> ((? [X_81 : $real] : (mem3(X_80, X_81, X_74))))))) & (! [X_82 : $real] : ((((? [X_83 : $int] : (mem3(X_83, X_82, X_74)))) => ($true)))))) & (! [X_84 : $real] : ((($true) => ((? [X_85 : $int] : ((((X_85 = 1) & (X_84 = 1.2)) | ((X_85 = 2) & (X_84 = $uminus(5.3))))))))))) & (! [X_86 : $real, X_87 : $int, X_88 : $int] : (((((((X_87 = 1) & (X_86 = 1.2)) | ((X_87 = 2) & (X_86 = $uminus(5.3)))) & (((X_88 = 1) & (X_86 = 1.2)) | ((X_88 = 2) & (X_86 = $uminus(5.3)))))) => ((X_87 = X_88))))))))).

% Local hypotheses
% Goal
tff('Goal', conjecture, (? [X_89 : $int] : ((((? [X_90 : set_2] : ((! [X_91 : $int, X_92 : $int] : (((mem2(X_92, X_91, X_90)) <=> ((((X_92 = 1) & (X_91 = 2)) | ((X_92 = 2) & (X_91 = 3)) | ((X_92 = 3) & (X_91 = 4))))))) & (! [X_93 : $int, X_94 : $int, X_95 : $int] : ((((mem2(X_93, X_94, X_90) & mem2(X_93, X_95, X_90))) => ((X_94 = X_95))))) & (! [X_96 : $int] : (((($greatereq(X_96, 1) & $lesseq(X_96, X_89))) <=> ((? [X_97 : $int] : (mem2(X_96, X_97, X_90))))))) & (! [X_98 : $int] : ((((? [X_99 : $int] : (mem2(X_99, X_98, X_90)))) => (mem0(X_98, g_S2_1))))))) & (! [X_100 : $int] : (((mem0(X_100, g_S2_1)) => ((? [X_101 : $int] : ((((X_101 = 1) & (X_100 = 2)) | ((X_101 = 2) & (X_100 = 3)) | ((X_101 = 3) & (X_100 = 4)))))))))) & (! [X_102 : $int, X_103 : $int, X_104 : $int] : (((((((X_103 = 1) & (X_102 = 2)) | ((X_103 = 2) & (X_102 = 3)) | ((X_103 = 3) & (X_102 = 4))) & (((X_104 = 1) & (X_102 = 2)) | ((X_104 = 2) & (X_102 = 3)) | ((X_104 = 3) & (X_102 = 4))))) => ((X_103 = X_104))))))))).
