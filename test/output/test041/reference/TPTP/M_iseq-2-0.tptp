% PO 2 0
% Group AssertionLemmas
% Tag Assertion is verified
%--------------------------------------------------------------------------
% File     : .
% Domain   : Atelier-B Proof Obligations - translated to TPTP
% Version  : TPTP v5.3.0. Released v2.2.0.
% English  : 
% Comments : Generated by PPTRANS-TPTP
% Source   : 
%--------------------------------------------------------------------------

tff(set_0_type,type,(set_0: $tType )).
tff(mem0_type,type,(mem0: ( $int * set_0 ) > $o )).

tff(set_1_type,type,(set_1: $tType )).
tff(mem1_type,type,(mem1: ( $real * set_1 ) > $o )).

tff(min_int_type,type,(min_int: $int)).
tff(max_int_type,type,(max_int: $int)).
tff(min_int_axiom,axiom,(min_int = $uminus(2147483648))).
tff(max_int_axiom,axiom,(max_int = 2147483647)).
%--------------------------------------------------------------------------
% Global declarations
tff(g_S1_0_type, type, g_S1_0 : set_0).
tff(g_S2_1_type, type, g_S2_1 : set_0).
tff(set_2_type, type, set_2 : $tType).
tff(set_2_empty, type, set_2_empty : set_2).
tff(set_2_insert, type, set_2_insert : set_2 > set_2).
tff(mem2_type, type, mem2 : ($int * $int * set_2) > $o).
tff(set_3_type, type, set_3 : $tType).
tff(set_3_empty, type, set_3_empty : set_3).
tff(set_3_insert, type, set_3_insert : set_3 > set_3).
tff(mem3_type, type, mem3 : ($int * $real * set_3) > $o).
% Defines
tff('Define:lprp:0', axiom, (! [X_5 : $int] : (((mem0(X_5, g_S1_0)) => ($true))))).

tff('Define:lprp:1', axiom, (! [X_6 : $int] : (((mem0(X_6, g_S1_0)) <=> (((X_6 = 5) | (X_6 = 4) | (X_6 = 1) | (X_6 = 1) | (X_6 = 2) | (X_6 = 3) | (X_6 = 8))))))).

tff('Define:lprp:2', axiom, (! [X_7 : $int] : (((mem0(X_7, g_S2_1)) => ($true))))).

tff('Define:lprp:3', axiom, (! [X_8 : $int] : (((mem0(X_8, g_S2_1)) <=> (($true & ($remainder_f(X_8, 2) = 0))))))).

%Global hypotheses
tff('gh_0_def', hypothesis, (? [X_51 : $int] : (((? [X_52 : set_2] : ((! [X_53 : $int, X_54 : $int] : (((mem2(X_54, X_53, X_52)) <=> ((((X_54 = 1) & (X_53 = 5)) | ((X_54 = 2) & (X_53 = 2)) | ((X_54 = 3) & (X_53 = 0))))))) & (! [X_55 : $int, X_56 : $int, X_57 : $int] : ((((mem2(X_55, X_56, X_52) & mem2(X_55, X_57, X_52))) => ((X_56 = X_57))))) & (! [X_58 : $int] : (((($greatereq(X_58, 1) & $lesseq(X_58, X_51))) <=> ((? [X_59 : $int] : (mem2(X_58, X_59, X_52))))))) & (! [X_60 : $int] : ((((? [X_61 : $int] : (mem2(X_61, X_60, X_52)))) => (mem0(X_60, g_S1_0))))))) & (! [X_62 : $int, X_63 : $int, X_64 : $int] : (((((((X_63 = 1) & (X_62 = 5)) | ((X_63 = 2) & (X_62 = 2)) | ((X_63 = 3) & (X_62 = 0))) & (((X_64 = 1) & (X_62 = 5)) | ((X_64 = 2) & (X_62 = 2)) | ((X_64 = 3) & (X_62 = 0))))) => ((X_63 = X_64))))))))).

tff('gh_1_def', hypothesis, (? [X_65 : $int] : (((? [X_66 : set_3] : ((! [X_67 : $real, X_68 : $int] : (((mem3(X_68, X_67, X_66)) <=> ((((X_68 = 1) & (X_67 = 1.2)) | ((X_68 = 2) & (X_67 = $uminus(5.3)))))))) & (! [X_69 : $int, X_70 : $real, X_71 : $real] : ((((mem3(X_69, X_70, X_66) & mem3(X_69, X_71, X_66))) => ((X_70 = X_71))))) & (! [X_72 : $int] : (((($greatereq(X_72, 1) & $lesseq(X_72, X_65))) <=> ((? [X_73 : $real] : (mem3(X_72, X_73, X_66))))))) & (! [X_74 : $real] : ((((? [X_75 : $int] : (mem3(X_75, X_74, X_66)))) => ($true)))))) & (! [X_76 : $real, X_77 : $int, X_78 : $int] : (((((((X_77 = 1) & (X_76 = 1.2)) | ((X_77 = 2) & (X_76 = $uminus(5.3)))) & (((X_78 = 1) & (X_76 = 1.2)) | ((X_78 = 2) & (X_76 = $uminus(5.3)))))) => ((X_77 = X_78))))))))).

% Local hypotheses
% Goal
tff('Goal', conjecture, (? [X_79 : $int] : (((? [X_80 : set_2] : ((! [X_81 : $int, X_82 : $int] : (((mem2(X_82, X_81, X_80)) <=> ((((X_82 = 1) & (X_81 = 2)) | ((X_82 = 2) & (X_81 = 3)) | ((X_82 = 3) & (X_81 = 4))))))) & (! [X_83 : $int, X_84 : $int, X_85 : $int] : ((((mem2(X_83, X_84, X_80) & mem2(X_83, X_85, X_80))) => ((X_84 = X_85))))) & (! [X_86 : $int] : (((($greatereq(X_86, 1) & $lesseq(X_86, X_79))) <=> ((? [X_87 : $int] : (mem2(X_86, X_87, X_80))))))) & (! [X_88 : $int] : ((((? [X_89 : $int] : (mem2(X_89, X_88, X_80)))) => (mem0(X_88, g_S2_1))))))) & (! [X_90 : $int, X_91 : $int, X_92 : $int] : (((((((X_91 = 1) & (X_90 = 2)) | ((X_91 = 2) & (X_90 = 3)) | ((X_91 = 3) & (X_90 = 4))) & (((X_92 = 1) & (X_90 = 2)) | ((X_92 = 2) & (X_90 = 3)) | ((X_92 = 3) & (X_90 = 4))))) => ((X_91 = X_92))))))))).
